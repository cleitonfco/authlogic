inherit_from: .rubocop_todo.yml

AllCops:
  Exclude:
    # TravisCI runs `bundle install --path=${BUNDLE_PATH:-vendor/bundle}`
    # causing our bundle to be installed in `gemfiles/vendor/bundle`.
    # Regardless, we have no interest in linting files in our bundle :D
    - gemfiles/vendor/bundle/**/*
  # Specify lowest supported ruby version. If we committed our .ruby-version
  # file, we wouldn't have to specify this (https://bit.ly/2vNTsue), but we
  # don't commit that file because that would interfere with testing multiple
  # rubies on CI.
  TargetRubyVersion: 2.3

# Please use normal indentation when aligning parameters.
#
# Good:
#
#     method_call(
#       a,
#       b
#     )
#
#     method_call(a,
#       b
#     )
#
# Bad:
#
#     method_call(a,
#                 b)
#
# The latter is harder to maintain and uses too much horizontal space.
Layout/AlignParameters:
  EnforcedStyle: with_fixed_indentation

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Layout/MultilineOperationIndentation:
  EnforcedStyle: indented

Metrics/AbcSize:
  Exclude:
    # crypto_providers/wordpress is deprecated so we will not attempt to
    # improve its quality.
    - lib/authlogic/crypto_providers/wordpress.rb
    # After consolidating the 23 session modules into one file (see discussion
    # in https://github.com/binarylogic/authlogic/pull/642) some methods are
    # too big. This is a temporary exclusion. This would be an entry in
    # `.rubocop_todo.yml` if rubocop allowed `Exclude`s in both simultaneously.
    - 'lib/authlogic/session/base.rb'
    # In an ideal world tests would be held to the same ABC metric as production
    # code. In practice, time spent doing so is not nearly as valuable as
    # spending the same time improving production code.
    - test/**/*

# Questionable value compared to metrics like AbcSize or CyclomaticComplexity.
Metrics/BlockLength:
  Enabled: false

# Questionable value compared to metrics like AbcSize or CyclomaticComplexity.
Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Exclude:
    # crypto_providers/wordpress is deprecated so we will not attempt to
    # improve its quality.
    - lib/authlogic/crypto_providers/wordpress.rb

# Aim for 80, but 100 is OK.
Metrics/LineLength:
  Max: 100

# Questionable value compared to metrics like AbcSize or CyclomaticComplexity.
Metrics/MethodLength:
  Enabled: false

# Questionable value compared to metrics like AbcSize or CyclomaticComplexity.
Metrics/ModuleLength:
  Enabled: false

# Sometimes prefixing a method name with get_ or set_ is a reasonable choice.
Naming/AccessorMethodName:
  Enabled: false

# Having a consistent delimiter, like EOS, improves reading speed. The delimiter
# is syntactic noise, just like a quotation mark, and inconsistent naming would
# hurt reading speed, just as inconsistent quoting would.
Naming/HeredocDelimiterNaming:
  Enabled: false

# Avoid single-line method definitions.
Style/EmptyMethod:
  EnforcedStyle: expanded

# Avoid annotated tokens except in desperately complicated format strings.
# In 99% of format strings they actually make it less readable.
Style/FormatStringToken:
  Enabled: false

# Too subtle to lint. Guard clauses are great, use them if they help.
Style/GuardClause:
  Enabled: false

# Too subtle to lint. A multi-line conditional may improve readability, even if
# a postfix conditional would satisfy `Metrics/LineLength`.
Style/IfUnlessModifier:
  Enabled: false

# Too subtle to lint. Use semantic style, but prefer `}.x` over `end.x`.
Style/BlockDelimiters:
  Enabled: false

# Use the nested style because it is safer. It is easier to make mistakes with
# the compact style.
Style/ClassAndModuleChildren:
  EnforcedStyle: nested

Style/Documentation:
  Exclude:
    - 'test/**/*'

# Both `module_function` and `extend_self` are legitimate. Most importantly,
# they are different (http://bit.ly/2hSQAGm)
Style/ModuleFunction:
  Enabled: false

# `x > 0` is understood by more programmers than `x.positive?`
Style/NumericPredicate:
  EnforcedStyle: comparison

# Use slashes for most patterns. Use %r when it reduces backslash escaping.
Style/RegexpLiteral:
  AllowInnerSlashes: false

# We use words, like `$LOAD_PATH`, because they are much less confusing that
# arcane symbols like `$:`. Unfortunately, we must then `require "English"` in
# a few places, but it's worth it so that we can read our code.
Style/SpecialGlobalVars:
  EnforcedStyle: use_english_names

Style/StringLiterals:
  EnforcedStyle: double_quotes
